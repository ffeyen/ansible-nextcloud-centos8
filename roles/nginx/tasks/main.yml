---
- name: enable nginx repo
  template:
    src: nginx.repo.j2
    dest: /etc/yum.repos.d/nginx.repo
    owner: root
    group: root
    mode: 0644

- name: ensure nginx is installed
  dnf:
    name: nginx
    state: present
    update_cache: yes

- name: check if Let's encrypt SSL certs are existing
  stat:
    path: '{{ item }}'
  with_items:
    - '/etc/letsencrypt/live/eastfrisia.org/fullchain.pem'
    - '/etc/letsencrypt/live/eastfrisia.org/privkey.pem'
  register: ssl_cert_exist

- name: copy nginx configuration
  become: yes
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: reload nginx

- name: create nginx folders
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0744
    recurse: yes
  with_items:
    - "/etc/nginx/sites-enabled"
    - "/etc/nginx/sites-available"
  notify: reload nginx

- name: remove existing nginx vhosts config
  become: yes
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/etc/nginx/sites-enabled/*"
    - "/etc/nginx/sites-available/*"

- name: check if dhparam.pem is aleady existing in /etc/ssl/
  stat:
    path: /etc/ssl/dhparam.pem
  register: dhparam_find_result

- name: copy dhparam.pem file to /etc/ssl/ if exists
  copy:
    src: dhparam.pem
    dest: /etc/ssl/dhparam.pem
  ignore_errors: yes
  register: dhparam_copy_result
  when: not dhparam_find_result.stat.exists

- name: generate dhparameters (4096 bits)
  community.crypto.openssl_dhparam:
    path: /etc/ssl/dhparam.pem
    size: 4096
    force: no
    owner: nginx
    mode: 0644
  when: 
    - not dhparam_find_result.stat.exists
    - dhparam_copy_result.failed

- name: copy nginx vhost configuration
  template:
    src: vhost.conf.j2
    dest: "/etc/nginx/sites-available/{{ inventory_hostname }}.conf"
    mode: 0644
  notify: reload nginx

- name: get a list of all vhosts (for symlink creation)
  find:
    paths: /etc/nginx/sites-available
    patterns: "*.conf"
    file_type: file
  register: find_vhosts

- name: apply symlinks in sites-enabled
  file:
    dest: /etc/nginx/sites-enabled/{{ item.path | basename }}
    src: "{{ item.path }}"
    state: link
    force: yes
  with_items: "{{ find_vhosts.files }}"
  notify: reload nginx

- name: ensure nginx service is enabled and running
  service:
    name: nginx
    state: started
    enabled: yes
